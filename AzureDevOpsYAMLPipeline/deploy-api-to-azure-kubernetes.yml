# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

resources:
  - repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build Image
    jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: 'ubuntu-latest'
      steps:

      - task: DockerCompose@0
        displayName: Source Directory- $(Build.SourcesDirectory), Working Directory- $(System.DefaultWorkingDirectory), Staging Directory-$(Build.ArtifactStagingDirectory)
        inputs:
          containerregistrytype: 'Azure Container Registry'
          azureSubscription: 'azure-service-connection'
          azureContainerRegistry: '{"loginServer":"studentapplicationimages.azurecr.io", "id" : "/subscriptions/f488342a-bcf3-4095-9abd-4f737e0c9459/resourceGroups/kubernetes_dev/providers/Microsoft.ContainerRegistry/registries/StudentApplicationImages"}'
          dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
          action: 'Build services'
          additionalImageTags: '$(Build.BuildId)'
          includeLatestTag: true

      - task: DockerCompose@0
        inputs:          
          containerregistrytype: 'Azure Container Registry'
          azureSubscription: 'azure-service-connection'
          azureContainerRegistry: '{"loginServer":"studentapplicationimages.azurecr.io", "id" : "/subscriptions/f488342a-bcf3-4095-9abd-4f737e0c9459/resourceGroups/kubernetes_dev/providers/Microsoft.ContainerRegistry/registries/StudentApplicationImages"}'
          dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
          action: 'Push services'
          additionalImageTags: '$(Build.BuildId)'
          includeLatestTag: true

      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/DeploymentK8s'
          Contents: '**/*.yml'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'manifests'
          publishLocation: 'Container'
      
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            # Write your commands here
            echo Default working Directory:-
            ls $(System.DefaultWorkingDirectory)
            echo ----------------------
            echo Staging directory - $(Build.ArtifactStagingDirectory)            
            ls $(Build.ArtifactStagingDirectory)
      

  - stage: Deploy
    displayName: Deploy to Kubernetes
    jobs:
    - job: Deploy
      displayName: Deploy
      pool:
        vmImage: 'ubuntu-latest'
      steps:

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'manifests'
          itemPattern: '**/*.yml'
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: Kubernetes@1
        displayName: Deploy sql server image 
        inputs:
          connectionType: 'Azure Resource Manager'
          azureSubscriptionEndpoint: 'azure-service-connection'
          azureResourceGroup: 'kubernetes_dev'
          kubernetesCluster: 'eks_dev'
          command: 'apply'
          useConfigurationFile: true
          configuration: '$(System.ArtifactsDirectory)/manifests/mssql-deployment.yml'
          secretType: 'dockerRegistry'
          containerRegistryType: 'Azure Container Registry'
          azureSubscriptionEndpointForSecrets: 'azure-service-connection'
          azureContainerRegistry: 'studentapplicationimages.azurecr.io'
      
      - task: Kubernetes@1               
        displayName: Deploy student registration api
        inputs:
          connectionType: 'Azure Resource Manager'
          azureSubscriptionEndpoint: 'azure-service-connection'
          azureResourceGroup: 'kubernetes_dev'
          kubernetesCluster: 'eks_dev'
          command: 'apply'
          useConfigurationFile: true
          configuration: '$(System.ArtifactsDirectory)/manifests/deployment.yml'
          secretType: 'dockerRegistry'
          containerRegistryType: 'Azure Container Registry'
          azureSubscriptionEndpointForSecrets: 'azure-service-connection'
          azureContainerRegistry: 'studentapplicationimages.azurecr.io'
      
      
